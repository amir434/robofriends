{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","username","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","_useState","useState","_useState2","slicedToArray","setRobots","_useState3","_useState4","setSearchfield","_useState5","_useState6","count","setCount","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","onClick","components_SearchBox","event","target","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.c17614d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, username, email, id}) => {\n    return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt=\"Robot\" src={`https://robohash.org/${id}?200x200`}></img>\n        <div>\n            <h2>{name}</h2>\n            <h3>{username}</h3>\n            <p>{email}</p>\n        </div>\n    </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            username={robots[i].username}\n                            email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots' onChange={searchChange} />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n// import { robotsList } from './robots';\n\nfunction App() {\n    // constructor() {\n    //     super()\n    //     this.state = {\n    //         robots: [],\n    //         searchfield: ''\n    //     }\n    // }\n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.cypress.io/users')\n            .then(response => response.json())\n            .then(users => { setRobots(users) });\n            console.log(count);\n    },[count])\n\n    const onRobotSearchChange = (event) => {\n        setSearchfield(event.target.value)\n    }\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n    return !robots.length ?\n        <h2>Loading...</h2> :\n        (\n            <div>\n                <h1>RoboFreinds</h1>\n                <button onClick={()=>setCount(count+2)}>Click me!</button>\n                <SearchBox searchChange={onRobotSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './containers/App';\nimport './containers/index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}